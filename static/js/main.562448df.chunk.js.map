{"version":3,"sources":["Components/Header.js","Components/Profile.js","Components/Search.js","Github.js","App.js","serviceWorker.js","index.js"],"names":["Header","this","props","onLogin","onLogout","page","accessToken","react_default","a","createElement","NavItem","class","onClick","bind","href","Navbar","className","Brand","id","Nav","Component","Profile","userdata","userData","followers","concat","homeURL","following","repos","notFound","target","title","name","username","src","avatar","location","Search","event","preventDefault","value","refs","searchProfile","onSubmit","submit","type","ref","placeholder","Github","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","fetch","then","res","json","data","setState","login","avatar_url","public_repos","html_url","message","catch","err","console","log","getProfile","Components_Search","Components_Profile","App","profile","lock","Auth0Lock","clientID","domain","on","authResult","getUserInfo","error","setProfile","localStorage","setItem","JSON","stringify","getItem","parse","_this3","show","removeItem","islog","src_Github","Components_Header","logout","showLock","defaultProps","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.562448df.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Navbar,Nav,NavItem} from 'react-bootstrap';\r\n\r\nclass Header extends Component {\r\n\r\nonLogin(){\r\n  this.props.onLogin();\r\n}\r\n\r\nonLogout(){\r\n  this.props.onLogout();\r\n}\r\n\r\n\r\n\r\n  render(){\r\n    let page;\r\n    if(this.props.accessToken){\r\n      page=<NavItem class=\"login\" onClick={this.onLogout.bind(this)} href='#'>Logout</NavItem>\r\n    }\r\n    else{\r\n      page=<NavItem class=\"login\" onClick={this.onLogin.bind(this)} href='#'>Login</NavItem>\r\n    }\r\n    return(\r\n      <Navbar className=\"p-2 bg-light\">\r\n        <Navbar.Header>\r\n          <Navbar.Brand id=\"heading\">\r\n            Github Finder\r\n          </Navbar.Brand>\r\n        </Navbar.Header>\r\n        <Nav>\r\n          {page}\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React , { Component } from 'react';\r\n\r\nclass Profile extends Component {\r\n\r\n  render(){\r\n    let userdata = this.props.userData;\r\n    let followers = `${userdata.homeURL}/followers`;\r\n    let following = `${userdata.homeURL}/following`;\r\n    let repos = `${userdata.homeURL}/repositories`;\r\n\r\n    if(userdata.notFound === 'Not Found'){\r\n      return(\r\n        <div className=\"NotFound\">\r\n          <h2>Heyyyy, The user you are looking for does not exist.</h2>\r\n          <h4>Please try again with correct user name.</h4>\r\n        </div>\r\n      );\r\n    }else {\r\n      return(\r\n        <section className=\"github-profile\">\r\n          <div className=\"github-profile-info\">\r\n            <a href={userdata.homeURL} target=\"_blank\" title={userdata.name || userdata.username}><img src={userdata.avatar} /></a>\r\n            <h2><a href={userdata.homeURL} title={userdata.username} target=\"_blank\">{userdata.name || userdata.username}</a></h2>\r\n            <h3>{userdata.location}</h3>\r\n          </div>\r\n          <div className=\"github-profile-state\">\r\n            <ul>\r\n               <li>\r\n                  <a href={followers} target=\"_blank\" title=\"Number Of Followers\"><i>{userdata.followers}</i><span>Followers</span></a>\r\n               </li>\r\n               <li>\r\n                  <a href={following} target=\"_blank\" title=\"Number Of Following\"><i>{userdata.following}</i><span>Following</span></a>\r\n               </li>\r\n               <li>\r\n                  <a href={repos} target=\"_blank\" title=\"Number Of Repositoriy\"><i>{userdata.repos}</i><span>Repositories</span></a>\r\n               </li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\n// import Header from './Components/Header';\r\n\r\n\r\nclass Search extends Component {\r\n\r\n  submit(event){\r\n    event.preventDefault();\r\n    let value=this.refs.username.value;\r\n    this.props.searchProfile(value);\r\n    this.refs.username.value='';\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"search-box\">\r\n        <form onSubmit={this.submit.bind(this)}>\r\n          <label>\r\n            <input type=\"search\" ref=\"username\" placeholder=\"Type a username\"/>\r\n          </label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport Profile from './Components/Profile';\r\nimport Search from './Components/Search';\r\n\r\nconst API = 'https://api.github.com/users/';\r\nclass Github extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: 'sakshi2711',\r\n      name: '',\r\n      followers: '',\r\n      following: '',\r\n      avatar: '',\r\n      location: '',\r\n      repos: '',\r\n      homeURL: '',\r\n      notFound: ''\r\n    };\r\n  }\r\n\r\n  getProfile(username){\r\n    let loginURL = API + username;\r\n\r\n    fetch(loginURL)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      this.setState({\r\n        username: data.login,\r\n        name: data.name,\r\n        followers: data.followers,\r\n        following: data.following,\r\n        avatar: data.avatar_url,\r\n        location: data.location,\r\n        repos: data.public_repos,\r\n        homeURL: data.html_url,\r\n        notFound: data.message\r\n      })\r\n    })\r\n    .catch(err => console.log(\"There is some Problem, Please try later.\") )\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getProfile(this.state.username);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <section id='card'>\r\n          <Search searchProfile={this.getProfile.bind(this)}/>\r\n          <Profile userData={this.state}/>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Github;\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport Header from './Components/Header'\nimport Github from './Github';\nimport Auth0Lock from 'auth0-lock';\n\nclass App extends Component {\n\nconstructor(props){\n  super(props);\n\n  this.state = {\n    accessToken:'',\n    profile:{}\n  };\n}\n\n  static defaultProps={\n    clientID:'eQdt49um3SF9rZgPfe3qr0goosqfK7EC',\n    domain:'sakshi2711.auth0.com'\n  }\n\n  componentWillMount(){\n    this.lock=new Auth0Lock(this.props.clientID, this.props.domain);\n    this.lock.on(\"authenticated\", (authResult)=>{\n      this.lock.getUserInfo(authResult.accessToken, (error, profile) => {\n        if(error){\n          console.log(error);\n          return;\n        }\n        this.setProfile(authResult.accessToken, profile);\n      });\n    });\n    this.getProfile();\n  }\n\n  setProfile(accessToken, profile){\n    localStorage.setItem('accessToken',accessToken);\n    localStorage.setItem('profile', JSON.stringify(profile));\n\n    this.setState({\n      accessToken: localStorage.getItem('acessToken'),\n      profile: JSON.parse(localStorage.getItem('profile'))\n    });\n  }\n\n  getProfile(){\n    if(localStorage.getItem('accessToken')!=null){\n      this.setState({\n        accessToken:localStorage.getItem('accessToken'),\n        profile: JSON.parse(localStorage.getItem('profile'))\n      },()=>{\n        console.log(this.state);\n      });\n    }\n  }\n\n  showLock(){\n    this.lock.show();\n  }\n\n  logout(){\n    this.setState({\n      accessToken:'',\n      profile:''\n    },()=>{\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('profile');\n    })\n  }\n\nrender() {\n  let islog;\n  if(localStorage.accessToken){\n    islog= <Github/>\n  }\n  else {\n    islog= <div id='login-msg'>Please login to view Github Finder</div>;\n  }\n    return (\n      <div className=\"App\">\n        <Header\n           lock={this.lock}\n           accessToken={localStorage.accessToken}\n           onLogout={this.logout.bind(this)}\n           onLogin={this.showLock.bind(this)}\n          />\n        {islog}\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}